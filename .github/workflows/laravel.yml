name: Laravel CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Run PHPUnit Tests
    runs-on: ubuntu-latest

    services:
      # Sets up a MySQL 8.0 service container
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: laravel_test
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2' # Change to your PHP version
        extensions: mbstring, xml, pdo, mysql, dom
        coverage: none

    - name: Copy .env for testing
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Configure .env for MySQL service
      run: |
        sed -i 's/DB_CONNECTION=sqlite/DB_CONNECTION=mysql/' .env
        sed -i 's/DB_HOST=127.0.0.1/DB_HOST=127.0.0.1/' .env
        sed -i 's/DB_PORT=3306/DB_PORT=3306/' .env
        sed -i 's/DB_DATABASE=laravel/DB_DATABASE=laravel_test/' .env
        sed -i 's/DB_USERNAME=root/DB_USERNAME=root/' .env
        sed -i 's/DB_PASSWORD=/DB_PASSWORD=root/' .env
        
    - name: Install Composer Dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    - name: Generate application key
      run: php artisan key:generate

    - name: Run database migrations
      run: php artisan migrate --no-interaction
      env:
        DB_HOST: 127.0.0.1
        DB_PORT: 3306

    - name: Run PHPUnit tests
      run: vendor/bin/phpunit
      env:
        DB_HOST: 127.0.0.1
        DB_PORT: 3306

  deploy:
    name: Deploy to Production
    needs: test
    runs-on: ubuntu-latest
    
    # Only run this job if the push is to the main branch
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2' # Must match your server's PHP version
        extensions: mbstring, xml, pdo, mysql, dom
        coverage: none
    
    - name: Install Composer Dependencies
      run: composer install --no-dev --optimize-autoloader

    # Add this block if you have JS/CSS assets to build
    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18' # Change to your Node version
    - name: Install NPM Dependencies
      run: npm install
    - name: Build Assets
      run: npm run build
    
    - name: Deploy to Server via SSH
      uses: easingthemes/ssh-deploy@v5.0.0
      with:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        REMOTE_HOST: ${{ secrets.SSH_HOST }}
        REMOTE_USER: ${{ secrets.SSH_USER }}
        SOURCE: "/" # Deploy the entire repository
        TARGET: ${{ secrets.TARGET_DIR }}
        EXCLUDE: "/.git/, /node_modules/" # Exclude files
        
        # Script to run on the server *after* files are copied
        POST_DEPLOY_CMD: |
          cd ${{ secrets.TARGET_DIR }}
          
          # Run Laravel-specific commands
          php artisan migrate --force
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          
          # Re-link storage
          php artisan storage:link
          
          # You might also want to restart queues:
          # php artisan queue:restart
          
          echo "Deployment finished successfully! ðŸŽ‰"

